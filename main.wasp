app JacobsPortfolio {
  wasp: {
    version: "^0.11.1"
  },
  title: "JacobsPortfolio",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    projects Project[]
    resume   String
psl=}

entity Project {=psl
    id          Int    @id @default(autoincrement())
    image       String
    description String
    link        String
    githubLink  String
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action createProject {
  fn: import { createProject } from "@server/actions.js",
  entities: [Project]
}

action updateProject {
  fn: import { updateProject } from "@server/actions.js",
  entities: [Project]
}

action deleteProject {
  fn: import { deleteProject } from "@server/actions.js",
  entities: [Project]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

query getProjects {
  fn: import { getProjects } from "@server/queries.js",
  entities: [Project]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route ContactRoute { path: "/contact", to: ContactPage }
page ContactPage {
  component: import { Contact } from "@client/Contact.jsx",
  authRequired: false
}